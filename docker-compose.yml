version: '3.8'

services:
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: form_submission_db
    ports:
      - "3308:3306"  # Exposing MySQL container's port 3306 to host's port 3308
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - mysql-data:/var/lib/mysql  # Persist MySQL data

  spring-boot-app:
    build:
      context: .  # This points to the directory where the Dockerfile is located
      dockerfile: Dockerfile  # Name of the Dockerfile used to build the Spring Boot application image
    container_name: spring-boot-app
    depends_on:
      mysql-db:
        condition: service_healthy  # Ensures Spring Boot starts only after MySQL is healthy
    ports:
      - "8080:8080"  # Exposing Spring Boot app's port 8080
    networks:
      - app-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/form_submission_db  # Spring Boot connects to MySQL on the internal Docker network
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root

networks:
  app-network:
    driver: bridge  # Network driver used for connecting containers

volumes:
  mysql-data:  # Volume to persist MySQL data